name: build-and-push-docker-images
on: 
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]


env: 
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: kubernetes-blueprints-preprod/playd
  # can use the name of the github repository as the image name by setting image name to the built in variable ${{ github.repository }}
  IMAGE_NAME: 'test-image'
  CONTEXT: '.'
  DOCKERFILE: 'Dockerfile'

jobs:
  # the job name 
  build:  
    permissions:
      contents: 'read'
      id-token: 'write'
    # specifies where to run the job. 
    # to use github hosted runners, set runs_on to any of the following ubuntu, macos, linux. eg runs-on: macos
    # to use self hosted runners set runs-on to a list of strings, the first string should be "self-hosted". 
    # if this is the only value in the list, then the job can run on any of your self hosted runners. 
    # to run this job on a specific runner, apply a label to the runner and include that label in the list ie runs-on:["self-hosted", "<one or more runnerlabel>"]
    runs-on: ubuntu-latest
    steps:
      # the first step must always be to checkout our code. for this we a using version3 of the checkout action 
      - name: Checkout repository
        uses: actions/checkout@v3

      # lint dockerfile. only runs on pull requests to main. checkout `on.pull_request.branches` above
      # - name: Lint Dockerfile 
      #   uses: hadolint/hadolint-action@v3.1.0
      #   if: github.event_name == 'pull_request'
      #   with:
      #     dockerfile: ${{ env.CONTEXT }}/${{ env.DOCKERFILE }}

      # not required if running on a selfhosted runner on a google vm with service accounts
      # - id: 'auth'
      #   name: 'Authenticate to Google Cloud'
      #   if: github.event_name != 'pull_request'
      #   uses: 'google-github-actions/auth@v1'
      #   with:
      #     token_format: 'access_token'
      #     workload_identity_provider: 'projects/451434782465/locations/global/workloadIdentityPools/poc-apex/providers/playd'
      #     service_account: 'wif-poc@kubernetes-blueprints-preprod.iam.gserviceaccount.com'
      
      # login to artifact registy. only runs on push to main. ie when an mr is merged into main.
      # checkout `on.push.branches` above
      # - name: Login to GAR
      #   uses: docker/login-action@v2
      #   if: github.event_name != 'pull_request'
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: oauth2accesstoken
      #     password: ${{ steps.auth.outputs.access_token }}
      
    #  https://github.com/docker/metadata-action.
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ${{ env.CONTEXT }}
      #     push: ${{ contains(fromJSON('["push", "release"]'), github.event.name) }}
      #     tags: ${{ steps.meta.outputs.tags }}-0.0.${{github.run_id }}
      #     file: ${{ env.DOCKERFILE }}

      - name: Terraform Apply
        id: plan
        shell: bash
        env:
          test: ${{ contains(fromJSON('["push", "release"]'), github.event.name) }}
          hello: ${{github.event.type}}
          hello2: ${{github.event.name}}
        run: |
          echo $test
          echo $hello
          echo $hello2
      # scan docker image
      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   if: github.event_name == 'pull_request'
      #   with:
      #     image-ref: ${{ steps.meta.outputs.tags }}-0.0.${{github.run_id }}
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'
